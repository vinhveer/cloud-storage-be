@baseUrl = http://localhost:8000
@email = trinn@gmail.com
@password = secret
@token = 

### @name login
### Login (Token-based, returns Personal Access Token)
POST {{baseUrl}}/api/auth/login
Accept: application/json
Content-Type: application/json

{"email":"{{email}}","password":"{{password}}","device_name":"cli"}

> {% 
  try {
    const body = JSON.parse(response.body);
    if (body && body.data && body.data.token) {
      client.global.set("token", body.data.token);
      console.log("Token captured to variable: token");
    } else {
      console.log("No token in response at data.token");
    }
  } catch (e) {
    console.log("Failed parsing response JSON");
  }
%}

### @name me
### Me (requires Bearer token)
GET {{baseUrl}}/api/auth/me
Accept: application/json
Authorization: Bearer {{token}}

### @name register
### Register new account (and capture token)
POST {{baseUrl}}/api/auth/register
Accept: application/json
Content-Type: application/json

{"name":"New User","email":"{{email}}","password":"{{password}}","password_confirmation":"{{password}}","device_name":"cli"}

> {% 
  try {
    const body = JSON.parse(response.body);
    if (body && body.data && body.data.token) {
      client.global.set("token", body.data.token);
      console.log("Token captured to variable: token (register)");
    } else {
      console.log("No token in response at data.token (register)");
    }
  } catch (e) {
    console.log("Failed parsing response JSON (register)");
  }
%}

### Logout current token
POST {{baseUrl}}/api/auth/logout
Accept: application/json
Authorization: Bearer {{token}}

### Logout all tokens
POST {{baseUrl}}/api/auth/logout-all
Accept: application/json
Authorization: Bearer {{token}}


